{"slug": "modules/lux/core/app", "modified": "2014-10-16T10:28:12", "site": {"template": "doc.html", "url": "http://quantmind.github.io/lux", "date": "2014-10-16T10-28-06", "media": "/media", "name": "Lux", "lux_version": "0.1.1-alpha.1", "template_engine": null, "python_version": "3.4.1", "year": 2014}, "api_url": "http://quantmind.github.io/lux/jsonapi/docs/modules/lux/core/app", "head": {}, "name": "modules_lux_core_app", "html": {"main": "<section id=\"page-header\" class=\"page-header-outer modules_lux_core_app-header\">\n    <div class=\"layer\">\n        <div class=\"page-header\">\n            <div class=\"container fullpage\">\n                <div class=\"row fullpage\">\n                    <div class=\"col-sm-12 text-center\">\n                        <breadcrumbs></breadcrumbs>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<div id=\"page-main\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"modules_lux_core_app-main col-md-12\">\n                <div class=\"center-block\" style=\"max-width: 900px\" data-highlight data-hash-scroll>\n                    <h1>Source code for lux.core.app</h1><div class=\"highlight\"><pre>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">.. autofunction:: execute_from_config</span>\n\n\n<span class=\"sd\">.. autoclass:: Application</span>\n<span class=\"sd\">   :members:</span>\n<span class=\"sd\">   :member-order: bysource</span>\n\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">inspect</span> <span class=\"kn\">import</span> <span class=\"n\">isclass</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">importlib</span> <span class=\"kn\">import</span> <span class=\"n\">import_module</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">pulsar</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pulsar</span> <span class=\"kn\">import</span> <span class=\"n\">ImproperlyConfigured</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pulsar.utils.httpurl</span> <span class=\"kn\">import</span> <span class=\"n\">urljoin</span><span class=\"p\">,</span> <span class=\"n\">remove_double_slash</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pulsar.apps.wsgi</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">WsgiHandler</span><span class=\"p\">,</span> <span class=\"n\">HtmlDocument</span><span class=\"p\">,</span> <span class=\"n\">test_wsgi_environ</span><span class=\"p\">,</span>\n                              <span class=\"n\">LazyWsgi</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pulsar.utils.pep</span> <span class=\"kn\">import</span> <span class=\"n\">itervalues</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pulsar.utils.log</span> <span class=\"kn\">import</span> <span class=\"n\">lazyproperty</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.commands</span> <span class=\"kn\">import</span> <span class=\"n\">ConsoleParser</span><span class=\"p\">,</span> <span class=\"n\">CommandError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.extension</span> <span class=\"kn\">import</span> <span class=\"n\">Extension</span><span class=\"p\">,</span> <span class=\"n\">Parameter</span><span class=\"p\">,</span> <span class=\"n\">EventHandler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.wrappers</span> <span class=\"kn\">import</span> <span class=\"n\">wsgi_request</span><span class=\"p\">,</span> <span class=\"n\">HeadMeta</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.engines</span> <span class=\"kn\">import</span> <span class=\"n\">template_engine</span>\n\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">&#39;App&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Application&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;execute_from_config&#39;</span><span class=\"p\">]</span>\n\n\n<span class=\"c\"># All events are fired with app as first positional argument</span>\n<span class=\"n\">ALL_EVENTS</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;on_config&#39;</span><span class=\"p\">,</span>  <span class=\"c\"># Config ready.</span>\n              <span class=\"s\">&#39;on_loaded&#39;</span><span class=\"p\">,</span>  <span class=\"c\"># Wsgi handler ready.</span>\n              <span class=\"s\">&#39;on_start&#39;</span><span class=\"p\">,</span>  <span class=\"c\"># Wsgi server starts. Extra args: server</span>\n              <span class=\"s\">&#39;on_request&#39;</span><span class=\"p\">,</span>  <span class=\"c\"># Fired when a new request arrives</span>\n              <span class=\"s\">&#39;on_html_document&#39;</span><span class=\"p\">,</span>  <span class=\"c\"># Html doc built. Extra args: request, html</span>\n              <span class=\"s\">&#39;on_form&#39;</span><span class=\"p\">,</span>  <span class=\"c\"># Form constructed. Extra args: form</span>\n              <span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"execute_from_config\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.execute_from_config\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">execute_from_config</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"n\">argv</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Create and run an :class:`App` from a ``config_file``.</span>\n\n<span class=\"sd\">    This is the function to use when creating the script which runs your</span>\n<span class=\"sd\">    web applications::</span>\n\n<span class=\"sd\">        import lux</span>\n\n<span class=\"sd\">        if __name__ == &#39;__main__&#39;:</span>\n<span class=\"sd\">            lux.execute_from_config(&#39;path.to.config&#39;)</span>\n\n<span class=\"sd\">    :param config_file: the python dotted path to the config file for setting</span>\n<span class=\"sd\">        up a new :class:`App`. The config file should be located in the</span>\n<span class=\"sd\">        python module which implements the :ref:`main application`</span>\n<span class=\"sd\">        of the web site.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"n\">execute_app</span><span class=\"p\">(</span><span class=\"n\">App</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">),</span> <span class=\"n\">argv</span><span class=\"o\">=</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n\n</div>\n<span class=\"k\">def</span> <span class=\"nf\">execute_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">argv</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Execute a given ``app``.</span>\n\n<span class=\"sd\">    :parameter app: the :class:`.App` to execute</span>\n<span class=\"sd\">    :parameter argv: optional list of parameters, if not given ``sys.argv``</span>\n<span class=\"sd\">        is used instead.</span>\n<span class=\"sd\">    :parameter params: additional key-valued parameters to pass to the</span>\n<span class=\"sd\">        :class:`.Command` executing the ``app``.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"k\">if</span> <span class=\"n\">argv</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">argv</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">_argv</span> <span class=\"o\">=</span> <span class=\"n\">argv</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">argv</span><span class=\"p\">:</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">_script</span> <span class=\"o\">=</span> <span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"p\">()</span>\n    <span class=\"k\">except</span> <span class=\"n\">ImproperlyConfigured</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">&#39;IMPROPERLY CONFUGURED: </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"nb\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"c\"># Parse for the command</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">get_parser</span><span class=\"p\">(</span><span class=\"n\">add_help</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">opts</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_known_args</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n    <span class=\"c\">#</span>\n    <span class=\"c\"># we have a command</span>\n    <span class=\"k\">if</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">get_command</span><span class=\"p\">(</span><span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">CommandError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">&#39;</span><span class=\"se\">\\n</span><span class=\"s\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">((</span><span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">.&#39;</span> <span class=\"o\">%</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"s\">&#39;Pass -h for list of commands&#39;</span><span class=\"p\">)))</span>\n            <span class=\"nb\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"c\"># Make sure the loop exists</span>\n        <span class=\"n\">argv</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n        <span class=\"n\">argv</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">command</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">CommandError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n            <span class=\"nb\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c\"># this should fail unless we pass -h</span>\n        <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">get_parser</span><span class=\"p\">(</span><span class=\"n\">nargs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">App</span><span class=\"p\">(</span><span class=\"n\">LazyWsgi</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config_file</span><span class=\"p\">,</span> <span class=\"n\">script</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">argv</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">):</span>\n            <span class=\"n\">config_file</span> <span class=\"o\">=</span> <span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"n\">config_file</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">__file__</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_params</span> <span class=\"o\">=</span> <span class=\"n\">params</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_config_file</span> <span class=\"o\">=</span> <span class=\"n\">config_file</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_script</span> <span class=\"o\">=</span> <span class=\"n\">script</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_argv</span> <span class=\"o\">=</span> <span class=\"n\">argv</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">setup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">environ</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Application\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Application</span><span class=\"p\">(</span><span class=\"n\">ConsoleParser</span><span class=\"p\">,</span> <span class=\"n\">Extension</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;The :class:`.Application` is the WSGI callable for serving</span>\n<span class=\"sd\">    lux applications.</span>\n\n<span class=\"sd\">    It is a specialised :class:`~.Extension` which collects</span>\n<span class=\"sd\">    all extensions of your application and setup the wsgi middleware used by</span>\n<span class=\"sd\">    the web server.</span>\n<span class=\"sd\">    An :class:`App` is not usually initialised directly, the higher level</span>\n<span class=\"sd\">    :func:`.execute_from_config` is used instead.</span>\n\n<span class=\"sd\">    .. attribute:: config</span>\n\n<span class=\"sd\">        The configuration dictionary containing all patameters specified in</span>\n<span class=\"sd\">        the :attr:`config_module`.</span>\n\n<span class=\"sd\">    .. attribute:: debug</span>\n\n<span class=\"sd\">        debug flag set at runtime via the ``debug`` flag::</span>\n\n<span class=\"sd\">            python myappscript.py serve --debug</span>\n\n<span class=\"sd\">    .. attribute:: auth_backend</span>\n\n<span class=\"sd\">        Used by the sessions extension</span>\n\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n    <span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n    <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n    <span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n    <span class=\"n\">admin</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n    <span class=\"n\">auth_backend</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n    <span class=\"n\">_config</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;EXTENSIONS&#39;</span><span class=\"p\">,</span> <span class=\"p\">[],</span>\n                  <span class=\"s\">&#39;List of extension names to use in your application. &#39;</span>\n                  <span class=\"s\">&#39;The order matter since the wsgi middleware of extension is &#39;</span>\n                  <span class=\"s\">&#39;processed in the order given by this setting.&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;DESCRIPTION&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;A description to display before the argument help on the &#39;</span>\n                  <span class=\"s\">&#39;command line when running commands&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;ENCODING&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;utf-8&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Default encoding for text.&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;ERROR_HANDLER&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Handler of Http exceptions&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;HTML_TITLE&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;Lux&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Default HTML Title&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;LOGGING_CONFIG&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Dictionary for configuring logging&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;MEDIA_URL&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;/media/&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;the base url for static files&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;MINIFIED_MEDIA&#39;</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Use minified media files. All media files will replace &#39;</span>\n                  <span class=\"s\">&#39;their extensions with .min.ext. For example, javascript &#39;</span>\n                  <span class=\"s\">&#39;links *.js become *.min.js&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;HTML_LINKS&#39;</span><span class=\"p\">,</span> <span class=\"p\">[],</span>\n                  <span class=\"s\">&#39;List of links to include in the html head tag.&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;SCRIPTS&#39;</span><span class=\"p\">,</span> <span class=\"p\">[],</span>\n                  <span class=\"s\">&#39;List of scripts to load in the head tag&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span>\n            <span class=\"s\">&#39;REQUIREJS_CONFIG&#39;</span><span class=\"p\">,</span>\n            <span class=\"s\">&#39;http://quantmind.github.io/require-config-js/require.config&#39;</span><span class=\"p\">,</span>\n            <span class=\"s\">&#39;Configuration url for Requirejs&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;REQUIREJS_URL&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&quot;//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.14/require&quot;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Default url for requirejs&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;REQUIREJS&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s\">&#39;require&#39;</span><span class=\"p\">,),</span>\n                  <span class=\"s\">&#39;Default Required javascript. Loaded via requirejs.&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;ASSET_PROTOCOL&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span>\n                  <span class=\"p\">(</span><span class=\"s\">&#39;Default protocol for scripts and links &#39;</span>\n                   <span class=\"s\">&#39;(could be http: or https:)&#39;</span><span class=\"p\">)),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;HTML_META&#39;</span><span class=\"p\">,</span>\n                  <span class=\"p\">[{</span><span class=\"s\">&#39;http-equiv&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;X-UA-Compatible&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s\">&#39;content&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;IE=edge&#39;</span><span class=\"p\">},</span>\n                   <span class=\"p\">{</span><span class=\"s\">&#39;name&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;viewport&#39;</span><span class=\"p\">,</span>\n                    <span class=\"s\">&#39;content&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;width=device-width, initial-scale=1&#39;</span><span class=\"p\">}],</span>\n                  <span class=\"s\">&#39;List of default ``meta`` elements to add to the html head&#39;</span>\n                  <span class=\"s\">&#39;element&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;DATE_FORMAT&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;d MMM y&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Default formatting for dates in JavaScript&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;DATETIME_FORMAT&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;d MMM y, h:mm:ss a&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Default formatting for dates in JavaScript&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;DEFAULT_TEMPLATE_ENGINE&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;python&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Default template engine&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;APP_NAME&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;Lux&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;Application site name&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;SITE_URL&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Web site url&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;LINKS&#39;</span><span class=\"p\">,</span>\n                  <span class=\"p\">{</span><span class=\"s\">&#39;python&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;https://www.python.org/&#39;</span><span class=\"p\">,</span>\n                   <span class=\"s\">&#39;lux&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;https://github.com/quantmind/lux&#39;</span><span class=\"p\">,</span>\n                   <span class=\"s\">&#39;pulsar&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;http://pythonhosted.org/pulsar&#39;</span><span class=\"p\">},</span>\n                  <span class=\"s\">&#39;Links used throughout the web site&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;CACHE_SERVER&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span>\n                  <span class=\"p\">(</span><span class=\"s\">&#39;Cache server, can be a connection string to a valid &#39;</span>\n                   <span class=\"s\">&#39;datastore which support the cache protocol or an object &#39;</span>\n                   <span class=\"s\">&#39;supporting the cache protocol&#39;</span><span class=\"p\">)),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;DEFAULT_FROM_EMAIL&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s\">&#39;Default email address to send email from&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">Parameter</span><span class=\"p\">(</span><span class=\"s\">&#39;LOCALE&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;en_GB&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;Default locale&#39;</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">callable</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">callable</span> <span class=\"o\">=</span> <span class=\"nb\">callable</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">argv</span> <span class=\"o\">=</span> <span class=\"nb\">callable</span><span class=\"o\">.</span><span class=\"n\">_argv</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">script</span> <span class=\"o\">=</span> <span class=\"nb\">callable</span><span class=\"o\">.</span><span class=\"n\">_script</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">events</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_build_config</span><span class=\"p\">(</span><span class=\"nb\">callable</span><span class=\"o\">.</span><span class=\"n\">_config_file</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fire</span><span class=\"p\">(</span><span class=\"s\">&#39;on_config&#39;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_build_handler</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fire</span><span class=\"p\">(</span><span class=\"s\">&#39;on_loaded&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">environ</span><span class=\"p\">,</span> <span class=\"n\">start_response</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;The WSGI thing.&#39;&#39;&#39;</span>\n        <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wsgi_request</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s\">&#39;Serving request </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fire</span><span class=\"p\">(</span><span class=\"s\">&#39;on_request&#39;</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">,</span> <span class=\"n\">start_response</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n<div class=\"viewcode-block\" id=\"Application.config_module\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.config_module\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">config_module</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;The :ref:`configuration file` used by this :class:`App`.&#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">module_name</span><span class=\"p\">())</span>\n</div>\n    <span class=\"nd\">@property</span>\n<div class=\"viewcode-block\" id=\"Application.extensions\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.extensions\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">extensions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Ordered dictionary of :class:`.Extension` available.</span>\n\n<span class=\"sd\">        The order is the same as in the</span>\n<span class=\"sd\">        :setting:`EXTENSIONS` config parameter.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;EXTENSION_HANDLERS&#39;</span><span class=\"p\">]</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.get_version\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.get_version\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_version</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Get version of this :class:`App`. Required by</span>\n<span class=\"sd\">        :class:`.ConsoleParser`.&#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">version</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.wsgi_request\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.wsgi_request\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">wsgi_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">environ</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                     <span class=\"n\">app_handler</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">urlargs</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Create a :class:`.WsgiRequest` from a wsgi ``environ`` and set the</span>\n<span class=\"sd\">        ``app`` attribute in the cache.</span>\n<span class=\"sd\">        Additional keyed-valued parameters can be inserted.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">environ</span><span class=\"p\">:</span>\n            <span class=\"c\"># No WSGI environment, build a test one</span>\n            <span class=\"n\">environ</span> <span class=\"o\">=</span> <span class=\"n\">test_wsgi_environ</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">kw</span><span class=\"p\">:</span>\n            <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">kw</span><span class=\"p\">)</span>\n        <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">wsgi_request</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">,</span> <span class=\"n\">app_handler</span><span class=\"o\">=</span><span class=\"n\">app_handler</span><span class=\"p\">,</span>\n                               <span class=\"n\">urlargs</span><span class=\"o\">=</span><span class=\"n\">urlargs</span><span class=\"p\">)</span>\n        <span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s\">&#39;error.handler&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;ERROR_HANDLER&#39;</span><span class=\"p\">]</span>\n        <span class=\"c\"># Check if pulsar is serving the application</span>\n        <span class=\"k\">if</span> <span class=\"s\">&#39;pulsar.cfg&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">environ</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cfg</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">pulsar</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">)</span>\n            <span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s\">&#39;pulsar.cfg&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cfg</span>\n\n        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"bp\">self</span>\n        <span class=\"k\">return</span> <span class=\"n\">request</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.html_document\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.html_document\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">html_document</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Build the HTML document.</span>\n\n<span class=\"sd\">        Usually there is no need to call directly this method.</span>\n<span class=\"sd\">        Instead one can use the :attr:`.WsgiRequest.html_document`.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">app_handler</span>\n        <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">handler</span><span class=\"p\">:</span>\n            <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">&#39;title&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span>\n        <span class=\"n\">site_url</span> <span class=\"o\">=</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;SITE_URL&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">media_path</span> <span class=\"o\">=</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;MEDIA_URL&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">site_url</span><span class=\"p\">:</span>\n            <span class=\"n\">media_path</span> <span class=\"o\">=</span> <span class=\"n\">site_url</span> <span class=\"o\">+</span> <span class=\"n\">media_path</span>\n        <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">HtmlDocument</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span> <span class=\"ow\">or</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;HTML_TITLE&#39;</span><span class=\"p\">],</span>\n                           <span class=\"n\">media_path</span><span class=\"o\">=</span><span class=\"n\">media_path</span><span class=\"p\">,</span>\n                           <span class=\"n\">minified</span><span class=\"o\">=</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;MINIFIED_MEDIA&#39;</span><span class=\"p\">],</span>\n                           <span class=\"n\">data_debug</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">,</span>\n                           <span class=\"n\">charset</span><span class=\"o\">=</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;ENCODING&#39;</span><span class=\"p\">],</span>\n                           <span class=\"n\">asset_protocol</span><span class=\"o\">=</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;ASSET_PROTOCOL&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">meta</span> <span class=\"o\">=</span> <span class=\"n\">HeadMeta</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">)</span>\n        <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">jscontext</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">&#39;dateFormat&#39;</span><span class=\"p\">:</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;DATE_FORMAT&#39;</span><span class=\"p\">],</span>\n                         <span class=\"s\">&#39;datetimeFormat&#39;</span><span class=\"p\">:</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;DATETIME_FORMAT&#39;</span><span class=\"p\">]}</span>\n        <span class=\"c\"># Locale</span>\n        <span class=\"n\">lang</span> <span class=\"o\">=</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;LOCALE&#39;</span><span class=\"p\">][:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">attr</span><span class=\"p\">(</span><span class=\"s\">&#39;lang&#39;</span><span class=\"p\">,</span> <span class=\"n\">lang</span><span class=\"p\">)</span>\n        <span class=\"c\">#</span>\n        <span class=\"n\">head</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">head</span>\n        <span class=\"k\">for</span> <span class=\"n\">script</span> <span class=\"ow\">in</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;SCRIPTS&#39;</span><span class=\"p\">]:</span>\n            <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">scripts</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">script</span><span class=\"p\">)</span>\n        <span class=\"c\">#</span>\n        <span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;REQUIREJS&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">required</span><span class=\"p\">:</span>\n            <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">scripts</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;REQUIREJS_CONFIG&#39;</span><span class=\"p\">])</span>\n            <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">scripts</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;REQUIREJS_URL&#39;</span><span class=\"p\">])</span>\n            <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">scripts</span><span class=\"o\">.</span><span class=\"n\">require</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"p\">)</span>\n        <span class=\"c\">#</span>\n        <span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;HTML_META&#39;</span><span class=\"p\">]</span> <span class=\"ow\">or</span> <span class=\"p\">():</span>\n            <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">add_meta</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">entry</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fire</span><span class=\"p\">(</span><span class=\"s\">&#39;on_html_document&#39;</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">doc</span><span class=\"p\">)</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># Add links last</span>\n        <span class=\"n\">links</span> <span class=\"o\">=</span> <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">links</span>\n        <span class=\"k\">for</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">cfg</span><span class=\"p\">[</span><span class=\"s\">&#39;HTML_LINKS&#39;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">link</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n                <span class=\"n\">links</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">link</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">links</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">link</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">doc</span>\n</div>\n    <span class=\"nd\">@lazyproperty</span>\n<div class=\"viewcode-block\" id=\"Application.commands\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.commands\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">commands</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Load all commands from installed applications&#39;&#39;&#39;</span>\n        <span class=\"n\">cmnds</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;EXTENSIONS&#39;</span><span class=\"p\">]:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">modname</span> <span class=\"o\">=</span> <span class=\"n\">e</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"s\">&#39;.core&#39;</span> <span class=\"k\">if</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"s\">&#39;lux&#39;</span> <span class=\"k\">else</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s\">&#39;.commands&#39;</span>\n                <span class=\"n\">mod</span> <span class=\"o\">=</span> <span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">,</span> <span class=\"s\">&#39;__path__&#39;</span><span class=\"p\">):</span>\n                    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">mod</span><span class=\"o\">.</span><span class=\"n\">__path__</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">((</span><span class=\"n\">f</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                                          <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s\">&#39;_&#39;</span><span class=\"p\">)</span> <span class=\"ow\">and</span>\n                                          <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s\">&#39;.py&#39;</span><span class=\"p\">)))</span>\n                        <span class=\"k\">if</span> <span class=\"n\">commands</span><span class=\"p\">:</span>\n                            <span class=\"n\">cmnds</span><span class=\"p\">[</span><span class=\"n\">e</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">commands</span>\n                    <span class=\"k\">except</span> <span class=\"ne\">OSError</span><span class=\"p\">:</span>\n                        <span class=\"k\">continue</span>\n            <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>    <span class=\"c\"># No management module</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmnds</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.get_command\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.get_command\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Construct and return a :class:`.Command` for this application</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">for</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">cmnds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">cmnd</span> <span class=\"ow\">in</span> <span class=\"n\">cmnds</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">cmnd</span><span class=\"p\">:</span>\n                    <span class=\"n\">modname</span> <span class=\"o\">=</span> <span class=\"s\">&#39;lux.core&#39;</span> <span class=\"k\">if</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"s\">&#39;lux&#39;</span> <span class=\"k\">else</span> <span class=\"n\">e</span>\n                    <span class=\"n\">mod</span> <span class=\"o\">=</span> <span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">.commands.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">))</span>\n                    <span class=\"k\">return</span> <span class=\"n\">mod</span><span class=\"o\">.</span><span class=\"n\">Command</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"n\">CommandError</span><span class=\"p\">(</span><span class=\"s\">&quot;Unknown command &#39;</span><span class=\"si\">%s</span><span class=\"s\">&#39;&quot;</span> <span class=\"o\">%</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.get_usage\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.get_usage\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_usage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Returns the script&#39;s main help text, as a string.&#39;&#39;&#39;</span>\n        <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;DESCRIPTION&#39;</span><span class=\"p\">]</span> <span class=\"ow\">or</span> <span class=\"s\">&#39;Lux toolkit&#39;</span>\n        <span class=\"n\">usage</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span>\n                 <span class=\"s\">&quot;Type &#39;</span><span class=\"si\">%s</span><span class=\"s\"> &lt;command&gt; --help&#39; for help on a specific command.&quot;</span> <span class=\"o\">%</span>\n                 <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">script</span> <span class=\"ow\">or</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">),</span>\n                 <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s\">&quot;Available commands:&quot;</span><span class=\"p\">,</span> <span class=\"s\">&quot;&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">commands</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">usage</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">usage</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">((</span><span class=\"s\">&#39;    </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">cmd</span> <span class=\"k\">for</span> <span class=\"n\">cmd</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">commands</span><span class=\"p\">)))</span>\n            <span class=\"n\">usage</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"se\">\\n</span><span class=\"s\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">usage</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">text</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.get_parser\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.get_parser\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_parser</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">with_commands</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">nargs</span><span class=\"o\">=</span><span class=\"s\">&#39;?&#39;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Return a python :class:`argparse.ArgumentParser` for parsing</span>\n<span class=\"sd\">        the command line.</span>\n\n<span class=\"sd\">        :param with_commands: Include parsing of all commands (default True).</span>\n<span class=\"sd\">        :param params: parameters to pass to the</span>\n<span class=\"sd\">            :class:`argparse.ArgumentParser` constructor.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">if</span> <span class=\"n\">with_commands</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"s\">&#39;usage&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_usage</span><span class=\"p\">()</span>\n        <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Application</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_parser</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n        <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s\">&#39;command&#39;</span><span class=\"p\">,</span> <span class=\"n\">nargs</span><span class=\"o\">=</span><span class=\"n\">nargs</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s\">&#39;command to run&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">parser</span>\n</div>\n    <span class=\"k\">def</span> <span class=\"nf\">on_start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">server</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fire</span><span class=\"p\">(</span><span class=\"s\">&#39;on_start&#39;</span><span class=\"p\">,</span> <span class=\"n\">server</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Application.load_extension\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.load_extension\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">load_extension</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dotted_path</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Load an :class:`.Extension` class into this :class:`App`.</span>\n\n<span class=\"sd\">        :param dotted_path: python dotted path to the extension.</span>\n<span class=\"sd\">        :return: an :class:`.Extension` class or ``None``</span>\n\n<span class=\"sd\">        If the module contains an :class:`.Extension` class named</span>\n<span class=\"sd\">        ``Extension``, it will be added to the :attr:`extension` dictionary.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"n\">dotted_path</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"p\">:</span>\n                <span class=\"c\"># this is the application extension, raise</span>\n                <span class=\"k\">raise</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> cannot load extension </span><span class=\"si\">%s</span><span class=\"s\">.&#39;</span><span class=\"p\">,</span>\n                                  <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dotted_path</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">Ext</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"s\">&#39;Extension&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">Ext</span> <span class=\"ow\">and</span> <span class=\"n\">isclass</span><span class=\"p\">(</span><span class=\"n\">Ext</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">issubclass</span><span class=\"p\">(</span><span class=\"n\">Ext</span><span class=\"p\">,</span> <span class=\"n\">Extension</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Ext</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.fire\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.fire\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">fire</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Fire an ``event``.&#39;&#39;&#39;</span>\n        <span class=\"n\">handlers</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">handlers</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">handler</span> <span class=\"ow\">in</span> <span class=\"n\">handlers</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n                <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span>\n                        <span class=\"s\">&#39;Unhandled exception while firing event </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"p\">,</span>\n                        <span class=\"n\">exc_info</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n</div>\n    <span class=\"k\">def</span> <span class=\"nf\">setup_logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"p\">):</span>\n        <span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">callable</span><span class=\"o\">.</span><span class=\"n\">_params</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">&#39;debug&#39;</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">pulsar</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">(</span><span class=\"n\">log_name</span><span class=\"o\">=</span><span class=\"s\">&#39;lux&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s\">&#39;debug&#39;</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"p\">)</span>\n        <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s\">&#39;loglevel&#39;</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">loglevel</span><span class=\"p\">)</span>\n        <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s\">&#39;loghandlers&#39;</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">loghandlers</span><span class=\"p\">)</span>\n        <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s\">&#39;logconfig&#39;</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;LOGGING_CONFIG&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">configured_logger</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">debug</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s\">&#39;lux&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">bind_events</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">extension</span><span class=\"p\">):</span>\n        <span class=\"n\">events</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">events</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">ALL_EVENTS</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">events</span><span class=\"p\">:</span>\n                <span class=\"n\">events</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">handlers</span> <span class=\"o\">=</span> <span class=\"n\">events</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">extension</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n                <span class=\"n\">handlers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">EventHandler</span><span class=\"p\">(</span><span class=\"n\">extension</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">format_date</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dte</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">dte</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;DATE_FORMAT&#39;</span><span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">format_datetime</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dte</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">dte</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;DATETIME_FORMAT&#39;</span><span class=\"p\">])</span>\n\n<div class=\"viewcode-block\" id=\"Application.template_full_path\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.template_full_path\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">template_full_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Return the template full path or None.</span>\n\n<span class=\"sd\">        Loops through all :attr:`extensions` in reversed order and</span>\n<span class=\"sd\">        check for ``name`` within the ``templates`` directory</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">for</span> <span class=\"n\">ext</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extensions</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())):</span>\n            <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ext</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s\">&#39;templates&#39;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"n\">filename</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.template\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.template\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">template</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Load a template from the file system</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template_full_path</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">filename</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"nb\">file</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"nb\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"s\">&#39;&#39;</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.context\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.context\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">context</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Load the ``context`` dictionary for this ``request``</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">context</span> <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span> <span class=\"k\">else</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">ext</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extensions</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">ext</span><span class=\"p\">,</span> <span class=\"s\">&#39;context&#39;</span><span class=\"p\">):</span>\n                <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">ext</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">context</span>\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.render_template\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.render_template\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">render_template</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">template_name</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Render a template&#39;&#39;&#39;</span>\n        <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"p\">)</span>\n        <span class=\"n\">rnd</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template_engine</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">rnd</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n</div>\n    <span class=\"k\">def</span> <span class=\"nf\">template_engine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">engine</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;DEFAULT_TEMPLATE_ENGINE&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">template_engine</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Application.html_response\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.html_response\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">html_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">template_name</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                      <span class=\"n\">jscontext</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">status_code</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Html response via a template.</span>\n\n<span class=\"sd\">        :param request: the :class:`.WsgiRequest`</span>\n<span class=\"sd\">        :param template_name: the template file name to load</span>\n<span class=\"sd\">        :param context: optional context dictionary</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">if</span> <span class=\"s\">&#39;text/html&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">content_types</span><span class=\"p\">:</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"s\">&#39;text/html&#39;</span>\n            <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">html_document</span>\n            <span class=\"k\">if</span> <span class=\"n\">jscontext</span><span class=\"p\">:</span>\n                <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">jscontext</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">jscontext</span><span class=\"p\">)</span>\n            <span class=\"n\">head</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">head</span>\n            <span class=\"k\">if</span> <span class=\"n\">title</span><span class=\"p\">:</span>\n                <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span> <span class=\"o\">%</span> <span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">title</span>\n            <span class=\"k\">if</span> <span class=\"n\">status_code</span><span class=\"p\">:</span>\n                <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">=</span> <span class=\"n\">status_code</span>\n            <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span>\n            <span class=\"k\">if</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">jscontext</span><span class=\"p\">:</span>\n                <span class=\"n\">jscontext</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">jscontext</span><span class=\"p\">)</span>\n                <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"o\">.</span><span class=\"n\">embedded_js</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">&#39;var luxContext = </span><span class=\"si\">%s</span><span class=\"s\">;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">jscontext</span><span class=\"p\">)</span>\n            <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n</div>\n<div class=\"viewcode-block\" id=\"Application.site_url\"><a class=\"viewcode-back\" href=\"../../../api/core#lux.core.app.Application.site_url\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">site_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Build the site url from an optional ``path``</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;SITE_URL&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span> <span class=\"ow\">or</span> <span class=\"s\">&#39;/&#39;</span>\n        <span class=\"k\">if</span> <span class=\"n\">base</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">base</span> <span class=\"k\">if</span> <span class=\"n\">path</span> <span class=\"o\">==</span> <span class=\"s\">&#39;/&#39;</span> <span class=\"k\">else</span> <span class=\"s\">&#39;</span><span class=\"si\">%s%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">path</span>\n\n    <span class=\"c\"># INTERNALS</span></div>\n    <span class=\"k\">def</span> <span class=\"nf\">_build_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">file</span><span class=\"p\">):</span>\n        <span class=\"c\"># Check if an extension module is available</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"s\">&#39;lux&#39;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">add2python</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">up</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">extension</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_extension</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">extension</span><span class=\"p\">:</span>   <span class=\"c\"># extension available, get the version from it</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">version</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">has_module</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s\">&#39;Invalid project setup. The Application &#39;</span>\n                                   <span class=\"s\">&#39;config module must be within a valid python &#39;</span>\n                                   <span class=\"s\">&#39;module.&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">callable</span><span class=\"o\">.</span><span class=\"n\">_params</span>\n        <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_parser</span><span class=\"p\">(</span><span class=\"n\">with_commands</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"n\">add_help</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">opts</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_known_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n        <span class=\"n\">config_module</span> <span class=\"o\">=</span> <span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config_module</span><span class=\"p\">:</span>\n            <span class=\"c\"># Different config file, configure again</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_build_config</span><span class=\"p\">(</span><span class=\"n\">config_module</span><span class=\"o\">.</span><span class=\"n\">__file__</span><span class=\"p\">)</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># setup application</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">config_module</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"p\">)</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># Load extensions</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s\">&#39;Setting up extensions&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">apps</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;EXTENSIONS&#39;</span><span class=\"p\">])</span>\n        <span class=\"n\">add_app</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"s\">&#39;lux&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">add_app</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">media_url</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;MEDIA_URL&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">media_url</span><span class=\"p\">:</span>\n            <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;MEDIA_URL&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">remove_double_slash</span><span class=\"p\">(</span><span class=\"s\">&#39;/</span><span class=\"si\">%s</span><span class=\"s\">/&#39;</span> <span class=\"o\">%</span> <span class=\"n\">media_url</span><span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;EXTENSIONS&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">)</span>\n        <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;EXTENSION_HANDLERS&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s\">&#39;EXTENSIONS&#39;</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">:]:</span>\n            <span class=\"n\">Ext</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">load_extension</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">Ext</span><span class=\"p\">:</span>\n                <span class=\"n\">extension</span> <span class=\"o\">=</span> <span class=\"n\">Ext</span><span class=\"p\">()</span>\n                <span class=\"n\">extensions</span><span class=\"p\">[</span><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">meta</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">extension</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bind_events</span><span class=\"p\">(</span><span class=\"n\">extension</span><span class=\"p\">)</span>\n                <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">config_module</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_build_handler</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;The WSGI application handler for this :class:`App`.</span>\n\n<span class=\"sd\">        It is lazily loaded the first time it is accessed so that</span>\n<span class=\"sd\">        this :class:`App` can be used by pulsar in a multiprocessing setup.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"c\"># do this here so that the config is already loaded before fire signal</span>\n        <span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">itervalues</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extensions</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fire</span><span class=\"p\">(</span><span class=\"s\">&#39;on_config&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">middleware</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">rmiddleware</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">extension</span> <span class=\"ow\">in</span> <span class=\"n\">extensions</span><span class=\"p\">:</span>\n            <span class=\"n\">_middleware</span> <span class=\"o\">=</span> <span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">middleware</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">_middleware</span><span class=\"p\">:</span>\n                <span class=\"n\">middleware</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">_middleware</span><span class=\"p\">)</span>\n            <span class=\"n\">_middleware</span> <span class=\"o\">=</span> <span class=\"n\">extension</span><span class=\"o\">.</span><span class=\"n\">response_middleware</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">_middleware</span><span class=\"p\">:</span>\n                <span class=\"n\">rmiddleware</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">_middleware</span><span class=\"p\">)</span>\n        <span class=\"c\"># Response middleware executed in reversed order</span>\n        <span class=\"n\">rmiddleware</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"n\">rmiddleware</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">WsgiHandler</span><span class=\"p\">(</span><span class=\"n\">middleware</span><span class=\"p\">,</span> <span class=\"n\">response_middleware</span><span class=\"o\">=</span><span class=\"n\">rmiddleware</span><span class=\"p\">)</span>\n\n</div>\n<span class=\"k\">def</span> <span class=\"nf\">add_app</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Insert a name to the list&#39;&#39;&#39;</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">if</span> <span class=\"n\">pos</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class='small hidden-print text-muted' id='page-footer'>\n    <div class='container'>\n        <div class='row'>\n            <div class='block col-sm-5'>\n                <div class='hidden-xs'>\n                    <ul class=\"fa-ul text-left\">\n    <li><i class=\"fa-li fa fa-copyright\"></i>2014 <a href=\"http://quantmind.com\">Quantmind</a></li>\n    <li>Site build with Lux on python 3.4.1</li>\n    <li>Docs build with <a href=\"http://sphinx-doc.org/\" target=\"_blank\">Sphinx</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/changelog\">Changelog</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/api/\">API</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/EXTENSIONS/\">Extensions</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/images\">Images</a></li>\n</ul>\n                </div>\n                <div class='text-center visible-xs'>\n                    <ul class=\"fa-ul text-left\">\n    <li><i class=\"fa-li fa fa-copyright\"></i>2014 <a href=\"http://quantmind.com\">Quantmind</a></li>\n    <li>Site build with Lux on python 3.4.1</li>\n    <li>Docs build with <a href=\"http://sphinx-doc.org/\" target=\"_blank\">Sphinx</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/changelog\">Changelog</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/api/\">API</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/EXTENSIONS/\">Extensions</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/images\">Images</a></li>\n</ul>\n                </div>\n            </div>\n            <div class='block col-sm-2 text-center'>\n                <div class='hidden-xs'>\n                    <p><a href='#top' title=\"Lux\" class=\"hover-opacity\">\n    <img height=50 title='Lux' src='http://quantmind.github.io/lux/media/luxsite/lux.png' alt='Lux'>\n</a></p>\n                </div>\n                <div class='visible-xs'>\n                    <p><a href='https://twitter.com/quantmind' title='Follow quantmind on twitter'>\n<i class='fa fa-twitter fa-2x'></i></a>\n<a href='https://plus.google.com/+QuantmindPlus' title='Follow quantmind on google+'>\n<i class='fa fa-google-plus-square fa-2x'></i></a>\n<a href='https://www.facebook.com/quantmind' title='Follow quantmind on facebook'>\n<i class='fa fa-facebook-square fa-2x'></i></a>\n<a href='https://github.com/quantmind/lux' title='Lux on github'>\n<i class='fa fa-github fa-2x'></i></a></p>\n                </div>\n            </div>\n            <div class='block col-sm-5'>\n                <div class='text-right hidden-xs'>\n                    <p><a href='https://twitter.com/quantmind' title='Follow quantmind on twitter'>\n<i class='fa fa-twitter fa-2x'></i></a>\n<a href='https://plus.google.com/+QuantmindPlus' title='Follow quantmind on google+'>\n<i class='fa fa-google-plus-square fa-2x'></i></a>\n<a href='https://www.facebook.com/quantmind' title='Follow quantmind on facebook'>\n<i class='fa fa-facebook-square fa-2x'></i></a>\n<a href='https://github.com/quantmind/lux' title='Lux on github'>\n<i class='fa fa-github fa-2x'></i></a></p>\n                </div>\n                <div class='text-center visible-xs'>\n                    <p><a href='#top' title=\"Lux\" class=\"hover-opacity\">\n    <img height=50 title='Lux' src='http://quantmind.github.io/lux/media/luxsite/lux.png' alt='Lux'>\n</a></p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"}, "html_url": "http://quantmind.github.io/lux/docs/modules/lux/core/app", "content_type": "text/html"}