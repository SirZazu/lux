{"content_type": "text/html", "site": {"name": "Lux", "date": "2014-10-14T08-24-22", "lux_version": "0.1.0-alpha.1", "media": "/media", "template_engine": null, "template": "doc.html", "year": 2014, "python_version": "3.4.1", "url": "http://quantmind.github.io/lux"}, "head": {}, "html_url": "http://quantmind.github.io/lux/docs/modules/lux/extensions/ui/lib/mixins", "html": {"main": "<section id=\"page-header\" class=\"page-header-outer modules_lux_extensions_ui_lib_mixins-header\">\n    <div class=\"layer\">\n        <div class=\"page-header\">\n            <div class=\"container fullpage\">\n                <div class=\"row fullpage\">\n                    <div class=\"col-sm-12 text-center\">\n                        <breadcrumbs></breadcrumbs>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<div id=\"page-main\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"modules_lux_extensions_ui_lib_mixins-main col-md-12\">\n                <div class=\"center-block\" style=\"max-width: 900px\" data-highlight data-hash-scroll>\n                    <h1>Source code for lux.extensions.ui.lib.mixins</h1><div class=\"highlight\"><pre>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">Bcd</span>\n<span class=\"sd\">~~~~~</span>\n<span class=\"sd\">.. autoclass:: Bcd</span>\n\n<span class=\"sd\">Border</span>\n<span class=\"sd\">~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Border</span>\n\n<span class=\"sd\">BoxSizing</span>\n<span class=\"sd\">~~~~~~~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: BoxSizing</span>\n\n<span class=\"sd\">Clearfix</span>\n<span class=\"sd\">~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Clearfix</span>\n\n<span class=\"sd\">Clickable</span>\n<span class=\"sd\">~~~~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Clickable</span>\n\n<span class=\"sd\">CssInclude</span>\n<span class=\"sd\">~~~~~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: CssInclude</span>\n\n<span class=\"sd\">Fontface</span>\n<span class=\"sd\">~~~~~~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Fontface</span>\n\n<span class=\"sd\">Gradient</span>\n<span class=\"sd\">~~~~~~~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Gradient</span>\n\n\n<span class=\"sd\">Opacity</span>\n<span class=\"sd\">~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Opacity</span>\n\n<span class=\"sd\">Radius</span>\n<span class=\"sd\">~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Radius</span>\n\n<span class=\"sd\">Shadow</span>\n<span class=\"sd\">~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Shadow</span>\n\n<span class=\"sd\">Stack</span>\n<span class=\"sd\">~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Stack</span>\n\n<span class=\"sd\">Transition</span>\n<span class=\"sd\">~~~~~~~~~~~~~~~~~</span>\n<span class=\"sd\">.. autoclass:: Transition</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.base</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.colorvar</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">&#39;Opacity&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Clearfix&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;InlineBlock&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Textoverflow&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;clear_anchor&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;fixtop&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;unfixtop&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Border&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Shadow&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;BoxSizing&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Radius&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Background&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Gradient&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;gradient&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Placeholder&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Bcd&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;bcd&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Clickable&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Transition&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;horizontal_navigation&#39;</span><span class=\"p\">,</span>\n           <span class=\"c\"># generators</span>\n           <span class=\"s\">&#39;CssInclude&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Image&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Fontface&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;FontSmoothing&#39;</span><span class=\"p\">,</span>\n           <span class=\"s\">&#39;Stack&#39;</span><span class=\"p\">]</span>\n\n<span class=\"c\">############################################################################</span>\n<span class=\"c\">##    BATTERY INCLUDED MIXINS</span>\n<span class=\"c\">############################################################################</span>\n\n\n<span class=\"c\">################################################# OPACITY</span>\n<div class=\"viewcode-block\" id=\"Opacity\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Opacity\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Opacity</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Add opacity to an element.</span>\n\n<span class=\"sd\">param o: a number between 0 and 1.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">o</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;opacity&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;filter&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;alpha(opacity=</span><span class=\"si\">%s</span><span class=\"s\">)&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"o\">*</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# CLEARFIX</span></div>\n<div class=\"viewcode-block\" id=\"Clearfix\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Clearfix\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Clearfix</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;A ``clearfix`` is a way for an element to automatically clear after</span>\n<span class=\"sd\">itself, so that you don&#39;t need to add additional markup.</span>\n<span class=\"sd\">It&#39;s generally used in float layouts where elements are floated to be</span>\n<span class=\"sd\">stacked horizontally.&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;:before,:after&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">display</span><span class=\"o\">=</span><span class=\"s\">&#39;table&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s\">&#39;&quot; &quot;&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;:after&#39;</span><span class=\"p\">,</span> <span class=\"n\">clear</span><span class=\"o\">=</span><span class=\"s\">&#39;both&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# InlineBlock</span></div>\n<span class=\"k\">class</span> <span class=\"nc\">InlineBlock</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Cross browser inline block form</span>\n\n<span class=\"sd\">http://foohack.com/2007/11/cross-browser-support-for-inline-block-styling/&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;display&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;-moz-inline-stack&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;display&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;inline-block&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;zoom&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;1&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;*display&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;inline&#39;</span>\n\n\n<span class=\"c\">################################################# TEXT OVERFLOW</span>\n<span class=\"k\">class</span> <span class=\"nc\">Textoverflow</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;overflow&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;hidden&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;text-overflow&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;ellipsis&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;white-space&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;nowrap&#39;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">clear_anchor</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;a&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">text_decoration</span><span class=\"o\">=</span><span class=\"s\">&#39;none&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s\">&#39;inherit&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">font_weight</span><span class=\"o\">=</span><span class=\"s\">&#39;inherit&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">cursor</span><span class=\"o\">=</span><span class=\"s\">&#39;inherit&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# FIXTOP</span>\n<span class=\"k\">class</span> <span class=\"nc\">fixtop</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Fix an element at the top of the page.&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">zindex</span><span class=\"o\">=</span><span class=\"mi\">2000</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zindex</span> <span class=\"o\">=</span> <span class=\"n\">zindex</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;left&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;top&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;right&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;position&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;fixed&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;z_index&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zindex</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">unfixtop</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;left&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;auto&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;top&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;auto&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;right&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;auto&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;position&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;static&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;z_index&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;auto&#39;</span>\n\n\n<span class=\"c\">################################################# CSS BORDER</span>\n<div class=\"viewcode-block\" id=\"Border\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Border\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Border</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;A :class:`Mixin` for adding border to a css element.</span>\n\n<span class=\"sd\">    :param color: border color. If not set no border color is specified.</span>\n<span class=\"sd\">    :param style: border style. If not set, ``solid`` is used. Could be</span>\n<span class=\"sd\">        one of: ``solid``, ``dotted``, ``none``.</span>\n<span class=\"sd\">    :param width: border width. If not set ``1px`` is used.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">top</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">right</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">bottom</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">left</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"n\">style</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"n\">width</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">spacing</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"p\">,</span> <span class=\"n\">bottom</span><span class=\"p\">,</span> <span class=\"n\">left</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">)</span>\n        <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"p\">)</span>\n        <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span>\n        <span class=\"n\">spacings</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">where</span><span class=\"p\">,</span> <span class=\"n\">sp</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_spacings</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">spacing</span><span class=\"p\">):</span>\n            <span class=\"n\">sp</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"n\">sp</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">sp</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">spacings</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">where</span><span class=\"p\">,</span> <span class=\"n\">sp</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">s</span> <span class=\"o\">==</span> <span class=\"s\">&#39;none&#39;</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">spacings</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;border&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">s</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">w</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;border&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_border</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">spacings</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"p\">:</span>\n                    <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;border-style&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">s</span>\n                <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n                    <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;border-color&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">c</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">where</span><span class=\"p\">,</span> <span class=\"n\">w</span> <span class=\"ow\">in</span> <span class=\"n\">spacings</span><span class=\"p\">:</span>\n                <span class=\"n\">border</span> <span class=\"o\">=</span> <span class=\"s\">&#39;border-</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">where</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"n\">border</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">s</span> <span class=\"k\">if</span> <span class=\"n\">s</span> <span class=\"o\">==</span> <span class=\"s\">&#39;none&#39;</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_border</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_border</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">):</span>\n        <span class=\"n\">bits</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">),</span> <span class=\"n\">s</span> <span class=\"ow\">or</span> <span class=\"s\">&#39;solid&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n            <span class=\"n\">bits</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"s\">&#39; &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">bits</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# CSS3 BOX SHADOW</span></div>\n<div class=\"viewcode-block\" id=\"Shadow\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Shadow\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Shadow</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;The box-shadow css3 property attaches one or more drop-shadows to the</span>\n<span class=\"sd\">box. The property is a comma-separated list of shadows, each specified by</span>\n<span class=\"sd\">2-4 length values, an optional color, and an optional inset keyword.</span>\n<span class=\"sd\">Omitted lengths are 0::</span>\n\n<span class=\"sd\">    Shadow(hshadow, vshadow, blur, spread, color, inset)</span>\n\n<span class=\"sd\">.. attribute:: hshadow</span>\n\n<span class=\"sd\">    The position of the horizontal shadow. Negative values are allowed.</span>\n\n<span class=\"sd\">.. attribute:: vshadow</span>\n\n<span class=\"sd\">    The position of the vertical shadow. Negative values are allowed.</span>\n\n<span class=\"sd\">.. attribute:: blur</span>\n\n<span class=\"sd\">    Optional blur distance.</span>\n\n<span class=\"sd\">.. attribute:: spread</span>\n\n<span class=\"sd\">    The size of shadow.</span>\n\n<span class=\"sd\">.. attribute:: color</span>\n\n<span class=\"sd\">    Optional color of the shadow.</span>\n\n<span class=\"sd\">.. attribute:: inset</span>\n\n<span class=\"sd\">    Optional boolean to changes the shadow from an outer shadow (outset)</span>\n<span class=\"sd\">    to an inner shadow.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hshadow</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">vshadow</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">blur</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">spread</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">inset</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hshadow</span> <span class=\"o\">=</span> <span class=\"n\">hshadow</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vshadow</span> <span class=\"o\">=</span> <span class=\"n\">vshadow</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blur</span> <span class=\"o\">=</span> <span class=\"n\">blur</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">spread</span> <span class=\"o\">=</span> <span class=\"n\">spread</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inset</span> <span class=\"o\">=</span> <span class=\"n\">inset</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">hshadow</span> <span class=\"o\">=</span> <span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hshadow</span><span class=\"p\">))</span>\n        <span class=\"n\">vshadow</span> <span class=\"o\">=</span> <span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vshadow</span><span class=\"p\">))</span>\n        <span class=\"n\">blur</span> <span class=\"o\">=</span> <span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blur</span><span class=\"p\">))</span>\n        <span class=\"n\">spread</span> <span class=\"o\">=</span> <span class=\"n\">size</span><span class=\"p\">(</span><span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">spread</span><span class=\"p\">))</span>\n        <span class=\"n\">col</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">)</span>\n        <span class=\"n\">inset</span> <span class=\"o\">=</span> <span class=\"s\">&#39; inset&#39;</span> <span class=\"k\">if</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inset</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"s\">&#39;&#39;</span>\n        <span class=\"k\">if</span> <span class=\"n\">hshadow</span> <span class=\"ow\">or</span> <span class=\"n\">vshadow</span> <span class=\"ow\">or</span> <span class=\"n\">blur</span> <span class=\"ow\">or</span> <span class=\"n\">spread</span><span class=\"p\">:</span>\n            <span class=\"n\">shadow</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">hshadow</span><span class=\"p\">,</span> <span class=\"n\">vshadow</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">spread</span> <span class=\"ow\">or</span> <span class=\"n\">blur</span><span class=\"p\">:</span>\n                <span class=\"n\">shadow</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">shadow</span><span class=\"p\">,</span> <span class=\"n\">blur</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">spread</span><span class=\"p\">:</span>\n                    <span class=\"n\">shadow</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">shadow</span><span class=\"p\">,</span> <span class=\"n\">spread</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">col</span><span class=\"p\">:</span>\n                <span class=\"n\">shadow</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">shadow</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">col</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"s\">&#39;</span><span class=\"si\">%s%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">shadow</span><span class=\"p\">,</span> <span class=\"n\">inset</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">shadow</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">shadow</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;-webkit-box-shadow&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">shadow</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;   -moz-box-shadow&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">shadow</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;        box-shadow&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">shadow</span>\n\n\n<span class=\"c\">################################################# CSS3 BOX SIZING</span></div>\n<div class=\"viewcode-block\" id=\"BoxSizing\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.BoxSizing\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BoxSizing</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;The box-sizing CSS3 property.</span>\n\n<span class=\"sd\">This property allows you to define certain elements to fit an area in a</span>\n<span class=\"sd\">certain way.</span>\n\n<span class=\"sd\">The only parameter is ``value`` which can be one of:</span>\n\n<span class=\"sd\">* ``content-box``: This is the behavior of width and height as specified by</span>\n<span class=\"sd\">  CSS2. The specified width and height (and min/max properties) apply to the</span>\n<span class=\"sd\">  width and height respectively of the content box of the element.</span>\n<span class=\"sd\">  The padding and border of the element are laid out and drawn outside the</span>\n<span class=\"sd\">  specified width and height.</span>\n<span class=\"sd\">* ``border-box``: The specified width and height (and min/max properties)</span>\n<span class=\"sd\">  on this element determine the border box of the element.</span>\n<span class=\"sd\">  That is, any padding or border specified on the element is laid out and</span>\n<span class=\"sd\">  drawn inside this specified width and height. The content width and height</span>\n<span class=\"sd\">  are calculated by subtracting the border and padding widths of the</span>\n<span class=\"sd\">  respective sides from the specified &#39;width&#39; and &#39;height&#39; properties.</span>\n<span class=\"sd\">* ``inherit``</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>      <span class=\"c\"># &#39;content-box&#39; or border-box</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s\">&#39;content-box&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;border-box&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;inherit&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;-webkit-box-sizing&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;   -moz-box-sizing&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;        box-sizing&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n\n<span class=\"c\">################################################# CSS3 RADIUS</span></div>\n<div class=\"viewcode-block\" id=\"Radius\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Radius\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Radius</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;css3 border radius. The optional location parameter specifies the</span>\n<span class=\"sd\">location where to apply the radius. For example, &#39;top&#39;, &#39;bottom&#39;, &#39;left&#39;,</span>\n<span class=\"sd\">&#39;right&#39;, &#39;top-left&#39;, &#39;top-right&#39; and so on.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">Radius</span><span class=\"p\">):</span>\n            <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">radius</span><span class=\"o\">.</span><span class=\"n\">radius</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">location</span> <span class=\"ow\">or</span> <span class=\"n\">radius</span><span class=\"o\">.</span><span class=\"n\">location</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">radius</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">location</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span><span class=\"p\">)</span>\n        <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"ow\">or</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">r</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">locs</span> <span class=\"o\">==</span> <span class=\"s\">&#39;top&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-top-left&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;-top-right&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">locs</span> <span class=\"o\">==</span> <span class=\"s\">&#39;bottom&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-bottom-left&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;-bottom-right&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">locs</span> <span class=\"o\">==</span> <span class=\"s\">&#39;left&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-top-left&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;-bottom-left&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">locs</span> <span class=\"o\">==</span> <span class=\"s\">&#39;right&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-top-right&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;-bottom-right&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">locs</span><span class=\"p\">:</span>\n                <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">locs</span><span class=\"p\">,)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;&#39;</span><span class=\"p\">,)</span>\n            <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"n\">locs</span><span class=\"p\">:</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;-webkit-border</span><span class=\"si\">%s</span><span class=\"s\">-radius&#39;</span> <span class=\"o\">%</span> <span class=\"n\">l</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">r</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;   -moz-border</span><span class=\"si\">%s</span><span class=\"s\">-radius&#39;</span> <span class=\"o\">%</span> <span class=\"n\">l</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">r</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;        border</span><span class=\"si\">%s</span><span class=\"s\">-radius&#39;</span> <span class=\"o\">%</span> <span class=\"n\">l</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">r</span>\n\n\n<span class=\"c\">################################################# CSS3 BACKGROUNd</span></div>\n<span class=\"k\">class</span> <span class=\"nc\">Background</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">repeat</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">url</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repeat</span> <span class=\"o\">=</span> <span class=\"n\">repeat</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">position</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&quot;url(</span><span class=\"si\">%s</span><span class=\"s\">)&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;-webkit-background-size&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;   -moz-background-size&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;     -o-background-size&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;        background-size&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-repeat&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repeat</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-position&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span>\n\n\n<span class=\"c\">################################################# CSS3 GRADIENT</span>\n<div class=\"viewcode-block\" id=\"Gradient\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Gradient\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Gradient</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;css3 gradient. Don&#39;t initialise directly, use :func:`gradient`</span>\n<span class=\"sd\">instead.</span>\n\n<span class=\"sd\">.. attribute:: direction</span>\n\n<span class=\"sd\">    One of ``v`` for vertical, ``h`` for horizontal.</span>\n\n<span class=\"sd\">.. attribute:: start</span>\n\n<span class=\"sd\">    The start color.</span>\n\n<span class=\"sd\">.. attribute:: end</span>\n\n<span class=\"sd\">    The start color.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n    <span class=\"n\">direction</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">direction</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">middle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;The middle value of the gradient.&#39;&#39;&#39;</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">start</span><span class=\"p\">:</span>\n            <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">)</span>\n            <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">RGBA</span><span class=\"o\">.</span><span class=\"n\">mix</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">start</span><span class=\"p\">:</span>\n            <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">direction</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">direction</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s\">&#39;h&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;v&#39;</span><span class=\"p\">):</span>\n                    <span class=\"n\">decorate</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">+</span><span class=\"s\">&#39;gradient&#39;</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">&#39;Gradient </span><span class=\"si\">%s</span><span class=\"s\"> not supported&#39;</span> <span class=\"o\">%</span> <span class=\"n\">d</span><span class=\"p\">)</span>\n                <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">color</span><span class=\"p\">(</span><span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">))</span>\n                <span class=\"n\">decorate</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c\"># a simple scalar, just set the background</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_gradient</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">):</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s\">&#39;100% 0&#39;</span> <span class=\"k\">if</span> <span class=\"n\">l</span> <span class=\"o\">==</span> <span class=\"s\">&#39;left&#39;</span> <span class=\"k\">else</span> <span class=\"s\">&#39;0 100%&#39;</span>\n        <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"k\">if</span> <span class=\"n\">l</span> <span class=\"o\">==</span> <span class=\"s\">&#39;left&#39;</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n        <span class=\"c\">#</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-color&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">e</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># FF 3.6+</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-moz-linear-gradient({2}, {0}, {1})&#39;</span>\n                                    <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">))</span>\n        <span class=\"c\">#</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-ms-linear-gradient({2}, {0}, {1})&#39;</span>\n                                    <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">))</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># Safari 4+, Chrome 2+</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-webkit-gradient(linear, 0 0, {2}, &#39;</span>\n                                    <span class=\"s\">&#39;from({0}), to({1}))&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">))</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># Safari 5.1+, Chrome 10+</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-webkit-linear-gradient({2}, {0}, {1})&#39;</span>\n                                    <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">))</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># Opera 11.10</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;-o-linear-gradient({2}, {0}, {1})&#39;</span>\n                                    <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">))</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># Le standard</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&#39;linear-gradient({2}, {0}, {1})&#39;</span>\n                                    <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">))</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-repeat&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;repeat-x&#39;</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># IE9 and down</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;filter&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&quot;progid:DXImageTransform.Microsoft.gradient(&quot;</span>\n                          <span class=\"s\">&quot;startColorstr=&#39;{0}&#39;, endColorstr=&#39;{1}&#39;, &quot;</span>\n                          <span class=\"s\">&quot;GradientType={2})&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">))</span>\n        <span class=\"c\">#</span>\n        <span class=\"c\"># Reset filters for IE</span>\n        <span class=\"c\">#elem[&#39;filter&#39;] = (&#39;progid:DXImageTransform.Microsoft.gradient&#39;</span>\n        <span class=\"c\">#                  &#39;(enabled = false)&#39;)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">hgradient</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_gradient</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"s\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">vgradient</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_gradient</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"s\">&#39;top&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n\n</div>\n<span class=\"k\">def</span> <span class=\"nf\">gradient</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">Gradient</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">Gradient</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# PLACEHOLDER</span>\n<span class=\"k\">class</span> <span class=\"nc\">Placeholder</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">cssa</span><span class=\"p\">((</span><span class=\"s\">&#39;::-webkit-input-placeholder,&#39;</span>\n              <span class=\"s\">&#39;:-moz-placeholder,&#39;</span>\n              <span class=\"s\">&#39;:-ms-input-placeholder&#39;</span><span class=\"p\">),</span>\n             <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">elem</span><span class=\"p\">,</span>\n             <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# BCD - BACKGROUND-COLOR-DECO</span>\n<div class=\"viewcode-block\" id=\"Bcd\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Bcd\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Bcd</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Background-color-decorator :class:`Mixin`.</span>\n\n<span class=\"sd\">    It can be applied to any element and it forms the basis for the</span>\n<span class=\"sd\">    :class:`Clickable` Mixin.</span>\n\n<span class=\"sd\">    :parameter background: backgroud or css3 :class:`Gradient`.</span>\n<span class=\"sd\">    :parameter colour: text colour</span>\n<span class=\"sd\">    :parameter text_shadow: text shadow</span>\n<span class=\"sd\">    :parameter text_decoration: text decoration</span>\n<span class=\"sd\">    :parameter border: :class:`Border` or parameters for :class:`Border`. If</span>\n<span class=\"sd\">        specified, the element will have a border definition.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">text_shadow</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">text_decoration</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">border</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"n\">background</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_shadow</span> <span class=\"o\">=</span> <span class=\"n\">text_shadow</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_decoration</span> <span class=\"o\">=</span> <span class=\"n\">text_decoration</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">border</span><span class=\"p\">,</span> <span class=\"n\">Border</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">border</span><span class=\"p\">:</span>\n            <span class=\"n\">border</span> <span class=\"o\">=</span> <span class=\"n\">Border</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">as_params</span><span class=\"p\">(</span><span class=\"n\">border</span><span class=\"p\">,</span> <span class=\"s\">&#39;color&#39;</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">border</span> <span class=\"o\">=</span> <span class=\"n\">border</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"n\">gradient</span><span class=\"p\">(</span><span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background</span><span class=\"p\">))</span>\n        <span class=\"n\">background</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">)</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;color&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">safe_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">)</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;text-shadow&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_shadow</span><span class=\"p\">)</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;text_decoration&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text_decoration</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">border</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">border</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">)</span>\n\n</div>\n<span class=\"k\">def</span> <span class=\"nf\">bcd</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">Bcd</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">params</span>\n    <span class=\"k\">elif</span> <span class=\"n\">params</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">Bcd</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">as_params</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">))</span>\n\n\n<span class=\"c\">################################################# CLICKABLE</span>\n<div class=\"viewcode-block\" id=\"Clickable\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Clickable\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Clickable</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Defines the default, hover and active state.&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">hover</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">active</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">cursor</span><span class=\"o\">=</span><span class=\"s\">&#39;pointer&#39;</span><span class=\"p\">,</span>\n                 <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cursor</span> <span class=\"o\">=</span> <span class=\"n\">cursor</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"n\">bcd</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hover</span> <span class=\"o\">=</span> <span class=\"n\">bcd</span><span class=\"p\">(</span><span class=\"n\">hover</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span> <span class=\"o\">=</span> <span class=\"n\">bcd</span><span class=\"p\">(</span><span class=\"n\">active</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">classes</span> <span class=\"o\">=</span> <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">classes</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;cursor&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hover</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;:hover,.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">hover</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hover</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;:active,.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# TRANSITION</span></div>\n<div class=\"viewcode-block\" id=\"Transition\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Transition\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Transition</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Define a CSS3 transition.</span>\n\n<span class=\"sd\">    A transition is controlled via the following parameters:</span>\n\n<span class=\"sd\">    .. attribute:: property</span>\n\n<span class=\"sd\">        Specifies the name or comma separated names of the CSS properties</span>\n<span class=\"sd\">        to which transitions</span>\n<span class=\"sd\">        should be applied. Only properties listed here are animated during</span>\n<span class=\"sd\">        transitions; changes to all other properties occur instantaneously</span>\n<span class=\"sd\">        as usual.</span>\n\n<span class=\"sd\">        Valid values are: ``opacity``, ``left``, ``top``, ``height``, ``all``</span>\n<span class=\"sd\">        and so forth.</span>\n\n<span class=\"sd\">    .. attribute:: duration</span>\n\n<span class=\"sd\">        Specifies the duration over which transitions should occur.</span>\n<span class=\"sd\">        You can specify a single duration that applies to all properties</span>\n<span class=\"sd\">        during the transition, or multiple values to allow each property</span>\n<span class=\"sd\">        to transition over a different period of time.</span>\n\n<span class=\"sd\">        Valid value is a string of type ``0.5s``, ``2s, 5s`` and so forth.</span>\n\n<span class=\"sd\">    .. attribute:: easing</span>\n\n<span class=\"sd\">        The `easing function`_ to use. Default: ``linear``.</span>\n\n<span class=\"sd\">    .. attribute:: delay</span>\n\n<span class=\"sd\">        Defines how long to wait between the time a property is changed</span>\n<span class=\"sd\">        and the transition actually begins.</span>\n\n<span class=\"sd\">    .. _`easing function`: http://easings.net/</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">easing</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">property</span> <span class=\"o\">=</span> <span class=\"nb\">property</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">duration</span> <span class=\"o\">=</span> <span class=\"n\">duration</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">easing</span> <span class=\"o\">=</span> <span class=\"n\">easing</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delay</span> <span class=\"o\">=</span> <span class=\"n\">delay</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"nb\">property</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">property</span><span class=\"p\">)</span>\n        <span class=\"n\">duration</span> <span class=\"o\">=</span> <span class=\"n\">as_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">duration</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">property</span> <span class=\"o\">==</span> <span class=\"s\">&#39;none&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">transition</span> <span class=\"o\">=</span> <span class=\"s\">&#39;none&#39;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">duration</span><span class=\"p\">:</span>\n            <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">duration</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">&#39;,&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">es</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">easing</span> <span class=\"ow\">or</span> <span class=\"s\">&#39;linear&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">&#39;,&#39;</span><span class=\"p\">)</span>\n            <span class=\"n\">ls</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">delay</span> <span class=\"ow\">or</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">&#39;,&#39;</span><span class=\"p\">)</span>\n            <span class=\"nb\">all</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"nb\">property</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"nb\">property</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">&#39;,&#39;</span><span class=\"p\">)):</span>\n                <span class=\"nb\">property</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">&#39; &#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">property</span><span class=\"p\">:</span>\n                    <span class=\"n\">dur</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">&#39; &#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span>\n                    <span class=\"n\">eas</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">es</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">es</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">es</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">&#39; &#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span>\n                    <span class=\"n\">lay</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">ls</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">&#39; &#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">lay</span><span class=\"p\">:</span>\n                        <span class=\"n\">lay</span> <span class=\"o\">=</span> <span class=\"s\">&#39; </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">lay</span>\n                    <span class=\"nb\">all</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">property</span><span class=\"p\">,</span> <span class=\"n\">dur</span><span class=\"p\">,</span> <span class=\"n\">eas</span><span class=\"p\">,</span> <span class=\"n\">lay</span><span class=\"p\">))</span>\n            <span class=\"n\">transition</span> <span class=\"o\">=</span> <span class=\"s\">&#39;, &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"p\">)</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;-webkit-transition&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">transition</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;   -moz-transition&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">transition</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;     -o-transition&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">transition</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;        transition&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">transition</span>\n\n\n<span class=\"c\">################################################# HORIZONTAL NAVIGATION</span></div>\n<span class=\"k\">class</span> <span class=\"nc\">horizontal_navigation</span><span class=\"p\">(</span><span class=\"n\">Clickable</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Horizontal navigation with ul and li tags.</span>\n\n<span class=\"sd\">:parameter padding: the padding for the navigation anchors.&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                 <span class=\"nb\">float</span><span class=\"o\">=</span><span class=\"s\">&#39;left&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">margin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                 <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">secondary_default</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">secondary_hover</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">secondary_active</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">secondary_padding</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">secondary_width</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">box_shadow</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"n\">display_all</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n                 <span class=\"n\">z_index</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n                 <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">horizontal_navigation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">float</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;right&#39;</span><span class=\"p\">):</span>\n            <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"s\">&#39;left&#39;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">float</span> <span class=\"o\">=</span> <span class=\"nb\">float</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">margin</span> <span class=\"o\">=</span> <span class=\"n\">margin</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"n\">height</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_default</span> <span class=\"o\">=</span> <span class=\"n\">secondary_default</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_hover</span> <span class=\"o\">=</span> <span class=\"n\">secondary_hover</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_active</span> <span class=\"o\">=</span> <span class=\"n\">secondary_active</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_width</span> <span class=\"o\">=</span> <span class=\"n\">secondary_width</span> <span class=\"ow\">or</span> <span class=\"n\">px</span><span class=\"p\">(</span><span class=\"mi\">120</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">Radius</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">box_shadow</span> <span class=\"o\">=</span> <span class=\"n\">Shadow</span><span class=\"p\">(</span><span class=\"n\">box_shadow</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">display_all</span> <span class=\"o\">=</span> <span class=\"n\">display_all</span>\n        <span class=\"c\"># padding</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padding</span> <span class=\"o\">=</span> <span class=\"n\">padding</span> <span class=\"ow\">or</span> <span class=\"n\">secondary_padding</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_padding</span> <span class=\"o\">=</span> <span class=\"n\">secondary_padding</span> <span class=\"ow\">or</span> <span class=\"n\">px</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"c\"># Z index for subnavigations</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">z_index</span> <span class=\"o\">=</span> <span class=\"n\">z_index</span> <span class=\"ow\">or</span> <span class=\"mi\">1000</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">hover</span><span class=\"p\">,</span> <span class=\"n\">active</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"p\">,</span>\n                   <span class=\"n\">default</span><span class=\"o\">.</span><span class=\"n\">background</span><span class=\"p\">,</span>\n                   <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;&gt; a&#39;</span><span class=\"p\">,</span>\n                       <span class=\"n\">bcd</span><span class=\"p\">(</span><span class=\"n\">background</span><span class=\"o\">=</span><span class=\"s\">&#39;transparent&#39;</span><span class=\"p\">,</span>\n                           <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">default</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">,</span>\n                           <span class=\"n\">text_decoration</span><span class=\"o\">=</span><span class=\"n\">default</span><span class=\"o\">.</span><span class=\"n\">text_decoration</span><span class=\"p\">,</span>\n                           <span class=\"n\">text_shadow</span><span class=\"o\">=</span><span class=\"n\">default</span><span class=\"o\">.</span><span class=\"n\">text_shadow</span><span class=\"p\">)),</span>\n                   <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;:hover&#39;</span><span class=\"p\">,</span>\n                       <span class=\"n\">hover</span><span class=\"o\">.</span><span class=\"n\">background</span><span class=\"p\">,</span>\n                       <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;&gt; a&#39;</span><span class=\"p\">,</span>\n                           <span class=\"n\">bcd</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">hover</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">,</span>\n                               <span class=\"n\">text_decoration</span><span class=\"o\">=</span><span class=\"n\">hover</span><span class=\"o\">.</span><span class=\"n\">text_decoration</span><span class=\"p\">,</span>\n                               <span class=\"n\">text_shadow</span><span class=\"o\">=</span><span class=\"n\">hover</span><span class=\"o\">.</span><span class=\"n\">text_shadow</span><span class=\"p\">)),</span>\n                       <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;&gt; ul&#39;</span><span class=\"p\">,</span> <span class=\"n\">display</span><span class=\"o\">=</span><span class=\"s\">&#39;block&#39;</span><span class=\"p\">)),</span>\n                   <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;:active, .</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">classes</span><span class=\"o\">.</span><span class=\"n\">state_active</span><span class=\"p\">,</span>\n                       <span class=\"n\">active</span><span class=\"o\">.</span><span class=\"n\">background</span><span class=\"p\">,</span>\n                       <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;&gt; a&#39;</span><span class=\"p\">,</span>\n                           <span class=\"n\">bcd</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">active</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">,</span>\n                               <span class=\"n\">text_decoration</span><span class=\"o\">=</span><span class=\"n\">active</span><span class=\"o\">.</span><span class=\"n\">text_decoration</span><span class=\"p\">,</span>\n                               <span class=\"n\">text_shadow</span><span class=\"o\">=</span><span class=\"n\">active</span><span class=\"o\">.</span><span class=\"n\">text_shadow</span><span class=\"p\">))),</span>\n                   <span class=\"n\">cursor</span><span class=\"o\">=</span><span class=\"s\">&#39;pointer&#39;</span><span class=\"p\">,</span>\n                   <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;display&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;block&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;float&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">float</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;position&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;relative&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;padding&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">margin</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">float</span> <span class=\"o\">==</span> <span class=\"s\">&#39;left&#39;</span><span class=\"p\">:</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;margin&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spacing</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">margin</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;margin&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">spacing</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">margin</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">box_shadow</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">)</span>\n        <span class=\"n\">padding</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">spacing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padding</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padding</span> <span class=\"k\">else</span>\n                   <span class=\"n\">spacing</span><span class=\"p\">(</span><span class=\"n\">px</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">px</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)))</span>\n        <span class=\"c\">#</span>\n        <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default</span> <span class=\"ow\">or</span> <span class=\"n\">bcd</span><span class=\"p\">()</span>\n        <span class=\"n\">hover</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hover</span> <span class=\"ow\">or</span> <span class=\"n\">bcd</span><span class=\"p\">()</span>\n        <span class=\"n\">active</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span> <span class=\"ow\">or</span> <span class=\"n\">bcd</span><span class=\"p\">()</span>\n        <span class=\"c\"># li elements in the main navigation ( &gt; li)</span>\n        <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"s\">&#39;&gt; li&#39;</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">hover</span><span class=\"p\">,</span> <span class=\"n\">active</span><span class=\"p\">)</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"s\">&#39;display&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;block&#39;</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"s\">&#39;float&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;left&#39;</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">:</span>\n            <span class=\"n\">line_height</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span> <span class=\"o\">-</span> <span class=\"n\">padding</span><span class=\"o\">.</span><span class=\"n\">top</span> <span class=\"o\">-</span> <span class=\"n\">padding</span><span class=\"o\">.</span><span class=\"n\">bottom</span>\n            <span class=\"k\">if</span> <span class=\"n\">line_height</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s\">&#39;Nav has height to low compared to paddings&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">line_height</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"c\"># subnavigations</span>\n        <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_default</span> <span class=\"ow\">or</span> <span class=\"n\">default</span>\n        <span class=\"n\">hover</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_hover</span> <span class=\"ow\">or</span> <span class=\"n\">hover</span>\n        <span class=\"n\">active</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_active</span> <span class=\"ow\">or</span> <span class=\"n\">active</span>\n        <span class=\"n\">ul</span> <span class=\"o\">=</span> <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;ul&#39;</span><span class=\"p\">,</span>\n                 <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span><span class=\"p\">,</span>\n                 <span class=\"n\">gradient</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">.</span><span class=\"n\">background</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span>\n                 <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">elem</span><span class=\"p\">,</span>\n                 <span class=\"n\">cursor</span><span class=\"o\">=</span><span class=\"s\">&#39;default&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"s\">&#39;absolute&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">margin</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                 <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_padding</span><span class=\"p\">,</span>\n                 <span class=\"n\">top</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height</span><span class=\"p\">,</span>\n                 <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_width</span><span class=\"p\">,</span>\n                 <span class=\"n\">list_style</span><span class=\"o\">=</span><span class=\"s\">&#39;none&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">list_style_image</span><span class=\"o\">=</span><span class=\"s\">&#39;none&#39;</span><span class=\"p\">,</span>\n                 <span class=\"n\">z_index</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">z_index</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">display_all</span><span class=\"p\">:</span>\n            <span class=\"n\">ul</span><span class=\"p\">[</span><span class=\"s\">&#39;display&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;none&#39;</span>\n        <span class=\"c\"># The sub lists li</span>\n        <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"s\">&#39;li&#39;</span><span class=\"p\">,</span> <span class=\"n\">ul</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"p\">,</span> <span class=\"n\">hover</span><span class=\"p\">,</span> <span class=\"n\">active</span><span class=\"p\">)</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"s\">&#39;padding&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"s\">&#39;margin&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"s\">&#39;position&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;relative&#39;</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"s\">&#39;border&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;none&#39;</span>\n        <span class=\"n\">li</span><span class=\"p\">[</span><span class=\"s\">&#39;width&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;auto&#39;</span>\n        <span class=\"c\"># the sub sub lists</span>\n        <span class=\"n\">ulul</span> <span class=\"o\">=</span> <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;ul&#39;</span><span class=\"p\">,</span>\n                   <span class=\"n\">gradient</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">.</span><span class=\"n\">background</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span>\n                   <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">li</span><span class=\"p\">,</span>\n                   <span class=\"n\">top</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                   <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"s\">&#39;absolute&#39;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">float</span> <span class=\"o\">==</span> <span class=\"s\">&#39;right&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">ul</span><span class=\"p\">[</span><span class=\"s\">&#39;right&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">ulul</span><span class=\"p\">[</span><span class=\"s\">&#39;left&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;auto&#39;</span>\n            <span class=\"n\">ulul</span><span class=\"p\">[</span><span class=\"s\">&#39;right&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_width</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">ulul</span><span class=\"p\">[</span><span class=\"s\">&#39;left&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">secondary_width</span>\n            <span class=\"n\">ulul</span><span class=\"p\">[</span><span class=\"s\">&#39;right&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;auto&#39;</span>\n        <span class=\"c\"># The anchor</span>\n        <span class=\"n\">css</span><span class=\"p\">(</span><span class=\"s\">&#39;a&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">elem</span><span class=\"p\">,</span>\n            <span class=\"n\">display</span><span class=\"o\">=</span><span class=\"s\">&#39;inline-block&#39;</span><span class=\"p\">,</span>\n            <span class=\"nb\">float</span><span class=\"o\">=</span><span class=\"s\">&#39;none&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">line_height</span><span class=\"o\">=</span><span class=\"n\">line_height</span><span class=\"p\">,</span>\n            <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padding</span><span class=\"p\">)</span>\n\n\n<span class=\"c\">################################################# INCLUDE CSS</span>\n<div class=\"viewcode-block\" id=\"CssInclude\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.CssInclude\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CssInclude</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Include one or more css resources. The correct use of this</span>\n<span class=\"sd\">    :class:`.Mixin` is within the ``body`` tag only::</span>\n\n<span class=\"sd\">        css(&#39;body&#39;, CssInclude(path))</span>\n\n<span class=\"sd\">    path can be both an internet address as well as a file in the</span>\n<span class=\"sd\">    local filesystem.</span>\n\n<span class=\"sd\">    .. attribute:: path</span>\n\n<span class=\"sd\">        A valid file location or a fully qualified internet address</span>\n\n<span class=\"sd\">    .. attribute:: location</span>\n\n<span class=\"sd\">        Optional relative location of imports. If specified ``url(...)``</span>\n<span class=\"sd\">        entries in the css string will be modified.</span>\n\n<span class=\"sd\">    .. attribute:: replace</span>\n\n<span class=\"sd\">        Optional string to replace just after a ``url(`` element in the</span>\n<span class=\"sd\">        css file.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">location</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace</span> <span class=\"o\">=</span> <span class=\"n\">replace</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s\">&#39;http&#39;</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n                <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                    <span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n                <span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">decode_content</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">raise_for_status</span><span class=\"p\">()</span>\n        <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">elem</span><span class=\"o\">.</span><span class=\"n\">root</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">:</span>\n            <span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"se\">\\n</span><span class=\"s\">&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">correct</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">stream</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">correct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"p\">):</span>\n        <span class=\"n\">media_url</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"s\">&#39;MEDIA_URL&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">adv</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">advance</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">():</span>\n            <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s\">&#39;url(&#39;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">n</span><span class=\"p\">:</span>\n                <span class=\"n\">rline</span> <span class=\"o\">=</span> <span class=\"n\">line</span>\n                <span class=\"n\">old_line</span> <span class=\"o\">=</span> <span class=\"n\">line</span>\n                <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s\">&#39;&#39;</span>\n                <span class=\"k\">while</span> <span class=\"n\">n</span><span class=\"p\">:</span>\n                    <span class=\"n\">n</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n                    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">rline</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s\">&#39;url(&#39;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">4</span>\n                    <span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">adv</span><span class=\"p\">(</span><span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n                    <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"s\">&#39;)&#39;</span>\n                    <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s\">&#39;&quot;&#39;</span><span class=\"p\">,</span> <span class=\"s\">&quot;&#39;&quot;</span><span class=\"p\">):</span>\n                        <span class=\"k\">if</span> <span class=\"n\">rline</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">):</span>\n                            <span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">adv</span><span class=\"p\">(</span><span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n                            <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"s\">&quot;</span><span class=\"si\">%s</span><span class=\"s\">)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">e</span>\n                            <span class=\"k\">break</span>\n                    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">rline</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">end</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">p</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                        <span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">adv</span><span class=\"p\">(</span><span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n                        <span class=\"n\">nurl</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n                        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace</span> <span class=\"ow\">and</span> <span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">):</span>\n                            <span class=\"n\">nurl</span> <span class=\"o\">=</span> <span class=\"n\">url</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">):]</span>\n                        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s\">&#39;.&#39;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s\">&#39;/&#39;</span><span class=\"p\">)):</span>\n                            <span class=\"n\">nurl</span> <span class=\"o\">=</span> <span class=\"n\">url</span>\n                        <span class=\"k\">if</span> <span class=\"n\">nurl</span><span class=\"p\">:</span>\n                            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s%s%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">media_url</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">nurl</span><span class=\"p\">)</span>\n                        <span class=\"n\">line</span> <span class=\"o\">+=</span> <span class=\"n\">url</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"n\">old_line</span>\n                        <span class=\"k\">break</span>\n                <span class=\"n\">line</span> <span class=\"o\">+=</span> <span class=\"n\">rline</span>\n            <span class=\"k\">yield</span> <span class=\"n\">line</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">advance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">):</span>\n        <span class=\"n\">line</span> <span class=\"o\">+=</span> <span class=\"n\">rline</span><span class=\"p\">[:</span><span class=\"n\">p</span><span class=\"p\">]</span>\n        <span class=\"n\">rline</span> <span class=\"o\">=</span> <span class=\"n\">rline</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">:]</span>\n        <span class=\"k\">return</span> <span class=\"n\">rline</span><span class=\"p\">,</span> <span class=\"n\">line</span>\n\n</div>\n<span class=\"k\">class</span> <span class=\"nc\">Image</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">repeat</span><span class=\"o\">=</span><span class=\"s\">&#39;no-repeat&#39;</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"s\">&#39;center&#39;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">url</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repeat</span> <span class=\"o\">=</span> <span class=\"n\">repeat</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">position</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s\">&#39;http&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">cssv</span><span class=\"o\">.</span><span class=\"n\">MEDIAURL</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-image&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;url(</span><span class=\"si\">%s</span><span class=\"s\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">url</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-repeat&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">repeat</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;background-position&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span>\n\n\n<span class=\"c\">################################################# FONT-FACE</span>\n<div class=\"viewcode-block\" id=\"Fontface\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Fontface\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Fontface</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"n\">svg</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"n\">base</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">svg</span> <span class=\"o\">=</span> <span class=\"s\">&#39;#&#39;</span><span class=\"o\">+</span><span class=\"n\">svg</span> <span class=\"k\">if</span> <span class=\"n\">svg</span> <span class=\"k\">else</span> <span class=\"s\">&#39;&#39;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s\">&#39;http&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"n\">cssv</span><span class=\"o\">.</span><span class=\"n\">MEDIAURL</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;src&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&quot;url(&#39;{0}.eot&#39;)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">base</span><span class=\"p\">)</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;src&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">&quot;url(&#39;{0}.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), &quot;</span>\n                       <span class=\"s\">&quot;url(&#39;{0}.woff&#39;) format(&#39;woff&#39;), &quot;</span>\n                       <span class=\"s\">&quot;url(&#39;{0}.ttf&#39;) format(&#39;truetype&#39;), &quot;</span>\n                       <span class=\"s\">&quot;url(&#39;{0}.svg{1}&#39;) format(&#39;svg&#39;)&quot;</span>\n                       <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">svg</span><span class=\"p\">))</span>\n\n</div>\n<span class=\"k\">class</span> <span class=\"nc\">FontSmoothing</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">):</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;text_rendering&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;optimizeLegibility&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;-moz-osx-font-smoothing&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;grayscale&#39;</span>\n        <span class=\"n\">elem</span><span class=\"p\">[</span><span class=\"s\">&#39;-webkit-font-smoothing&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#39;antialiased&#39;</span>\n\n\n<span class=\"c\">################################################# Stack</span>\n<div class=\"viewcode-block\" id=\"Stack\"><a class=\"viewcode-back\" href=\"../../../../../api/ui#lux.extensions.ui.lib.mixins.Stack\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Stack</span><span class=\"p\">(</span><span class=\"n\">Mixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Stack :class:`Stackable` mixins.&#39;&#39;&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">mixins</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mixins</span> <span class=\"o\">=</span> <span class=\"n\">mixins</span>\n        <span class=\"n\">classes</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">((</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">__class__</span> <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"n\">mixins</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">classes</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">&#39;Stack works with mixins of the same class&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">mixin</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mixins</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">mixin</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s\">&#39;, &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mixins</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mixins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span></div>\n</pre></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class='small hidden-print text-muted' id='page-footer'>\n    <div class='container'>\n        <div class='row'>\n            <div class='block col-sm-5'>\n                <div class='hidden-xs'>\n                    <ul class=\"fa-ul text-left\">\n    <li><i class=\"fa-li fa fa-copyright\"></i>2014 <a href=\"http://quantmind.com\">Quantmind</a></li>\n    <li>Site build with Lux on python 3.4.1</li>\n    <li>Docs build with <a href=\"http://sphinx-doc.org/\" target=\"_blank\">Sphinx</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/changelog\">Changelog</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/api/\">API</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/EXTENSIONS/\">Extensions</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/images\">Images</a></li>\n</ul>\n                </div>\n                <div class='text-center visible-xs'>\n                    <ul class=\"fa-ul text-left\">\n    <li><i class=\"fa-li fa fa-copyright\"></i>2014 <a href=\"http://quantmind.com\">Quantmind</a></li>\n    <li>Site build with Lux on python 3.4.1</li>\n    <li>Docs build with <a href=\"http://sphinx-doc.org/\" target=\"_blank\">Sphinx</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/changelog\">Changelog</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/api/\">API</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/docs/EXTENSIONS/\">Extensions</a></li>\n    <li><a href=\"http://quantmind.github.io/lux/images\">Images</a></li>\n</ul>\n                </div>\n            </div>\n            <div class='block col-sm-2 text-center'>\n                <div class='hidden-xs'>\n                    <p><a href='#top' title=\"Lux\" class=\"hover-opacity\">\n    <img height=50 title='Lux' src='http://quantmind.github.io/lux/media/luxsite/lux.png' alt='Lux'>\n</a></p>\n                </div>\n                <div class='visible-xs'>\n                    <p><a href='https://twitter.com/quantmind' title='Follow quantmind on twitter'>\n<i class='fa fa-twitter fa-2x'></i></a>\n<a href='https://plus.google.com/+QuantmindPlus' title='Follow quantmind on google+'>\n<i class='fa fa-google-plus-square fa-2x'></i></a>\n<a href='https://www.facebook.com/quantmind' title='Follow quantmind on facebook'>\n<i class='fa fa-facebook-square fa-2x'></i></a>\n<a href='https://github.com/quantmind/lux' title='Lux on github'>\n<i class='fa fa-github fa-2x'></i></a></p>\n                </div>\n            </div>\n            <div class='block col-sm-5'>\n                <div class='text-right hidden-xs'>\n                    <p><a href='https://twitter.com/quantmind' title='Follow quantmind on twitter'>\n<i class='fa fa-twitter fa-2x'></i></a>\n<a href='https://plus.google.com/+QuantmindPlus' title='Follow quantmind on google+'>\n<i class='fa fa-google-plus-square fa-2x'></i></a>\n<a href='https://www.facebook.com/quantmind' title='Follow quantmind on facebook'>\n<i class='fa fa-facebook-square fa-2x'></i></a>\n<a href='https://github.com/quantmind/lux' title='Lux on github'>\n<i class='fa fa-github fa-2x'></i></a></p>\n                </div>\n                <div class='text-center visible-xs'>\n                    <p><a href='#top' title=\"Lux\" class=\"hover-opacity\">\n    <img height=50 title='Lux' src='http://quantmind.github.io/lux/media/luxsite/lux.png' alt='Lux'>\n</a></p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"}, "api_url": "http://quantmind.github.io/lux/jsonapi/docs/modules/lux/extensions/ui/lib/mixins", "slug": "modules/lux/extensions/ui/lib/mixins", "name": "modules_lux_extensions_ui_lib_mixins", "modified": "2014-10-14T08:24:28"}